msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-14 13:33+0000\n"
"PO-Revision-Date: 2023-04-14 13:49\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: Japanese\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/07_leveraging_qiskit_runtime.po\n"
"X-Crowdin-File-ID: 9678\n"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:9
msgid "This page was generated from `docs/tutorials/07_leveraging_qiskit_runtime.ipynb`__."
msgstr "このページは `docs/tutorials/07_leveraging_qiskit_runtime.ipynb`__ から生成されました。"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:9
msgid "Leveraging Qiskit Runtime"
msgstr "Qiskit Runtimeの活用"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:20
msgid "The ``VQEClient`` discussed in this tutorial is **DEPRECATED** as of version 0.6 of Qiskit Nature and will be removed no sooner than 3 months after the release. Instead you should use the new primitives based VQE with the Qiskit IBM Runtime Estimator primitive. For more details on how to migrate check out this guide `here <https://qisk.it/algo_migration#vqe>`__."
msgstr ""

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:31
msgid "Iterative algorithms, such as the Variational Quantum Eigensolver (VQE), traditionally send one batch of circuits (one \"job\") to be executed on the quantum device in each iteration. Sending a job involves certain overhead, mainly"
msgstr ""

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:33
msgid "the time to process the requests and send the data (API overhead, usually about 10s)"
msgstr "リクエストを処理してデータを送信する時間。（APIのオーバーヘッド、通常は約10秒)"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:34
msgid "the job queue time, that is how long you have to wait before it's your turn to run on the device (usually about 2min)"
msgstr ""

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:36
msgid "If we send hundreds of jobs iteratively, this overhead quickly dominates the execution time of our algorithm. Qiskit Runtime allows us to tackle these issues and significantly speed up (especially) iterative algorithms. With Qiskit Runtime, one job does not contain only a batch of circuits but the *entire* algorithm. That means we only experience the API overhead and queue wait *once* instead of in every iteration! You'll be able to either upload algorithm parameters and delegate all the complexity to the cloud, where your program is executed, or upload your personal algorithm directly."
msgstr ""

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:39
msgid "For the VQE, the integration of Qiskit Runtime in your existing code is a piece of cake. There is a (almost) drop-in replacement, called ``VQEClient`` for the ``VQE`` class."
msgstr "VQEの場合、既存のコードにQiskit Runtimeを統合することは簡単です。 ``VQE`` クラスには ``VQEClient`` と呼ばれる（ほぼ）ドロップインの代替品があります。"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:41
msgid "Let's see how you can leverage the runtime on a simple chemistry example: Finding the ground state energy of the lithium hydrate (LiH) molecule at a given bond distance."
msgstr ""

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:53
msgid "Problem specification: LiH molecule"
msgstr "問題の指定：LiH分子"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:55
msgid "First, we specify the molecule whose ground state energy we seek. Here, we look at LiH with a bond distance of 2.5 Å."
msgstr "まず、基底状態エネルギーを求める分子を指定します。ここでは、結合距離が2.5ÅのLiHを見てみましょう。"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:112
msgid "Classical reference solution"
msgstr "古典的な参考解"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:123
msgid "As a reference solution we can solve this system classically with the ``NumPyEigensolver``."
msgstr "参考解として、この問題を ``NumPyEigensolver`` で古典的に解くことができます。"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:252
msgid "VQE"
msgstr "VQE"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:254
msgid "To run the VQE we need to select a parameterized quantum circuit acting as ansatz and a classical optimizer. Here we'll choose a heuristic, hardware efficient ansatz and the SPSA optimizer."
msgstr ""

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:317
msgid "Before executing the VQE in the cloud using Qiskit Runtime, let's execute a local VQE first."
msgstr ""

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:453
msgid "Runtime VQE"
msgstr "Runtime VQE"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:455
msgid "Let's exchange the eigensolver from a local VQE algorithm to a VQE executed using Qiskit Runtime -- simply by exchanging the ``VQE`` class by the ``qiskit_nature.runtime.VQEClient``."
msgstr ""

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:457
msgid "First, we'll have to load a provider to access Qiskit Runtime. **Note:** You have to replace the next cell with your provider."
msgstr ""

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:483
msgid "Now we can set up the ``VQEClient``. In this first release, the optimizer must be provided as a dictionary, in future releases you'll be able to pass the same optimizer object as in the traditional VQE."
msgstr ""

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:625
msgid "If we are interested in the development of the energy, the ``VQEClient`` allows access to the history of the optimizer, which contains the loss per iteration (along with the parameters and a timestamp). Note that this only holds for the SPSA and QN-SPSA optimizers. Otherwise you have to use a callback to the ``VQEClient``, similar to the normal ``VQE``."
msgstr "エネルギーの推移に興味がある場合、 ``VQEClient`` は、反復ごとの損失を含むオプティマイザーの履歴へアクセスすることができます（パラメーターとタイムスタンプとともに）。これは、SPSA および QN-SPSA オプティマイザー にのみ当てはまることに注意してください。 それ以外の場合は、通常の ``VQE`` と同様に、 ``VQEClient`` へのコールバックを使用する必要があります。"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:627
msgid "We can access this data via the ``raw_result`` attribute of the ground state solver."
msgstr "このデータには、基底状態ソルバーの ``raw_result`` 属性を介してアクセスできます。"

